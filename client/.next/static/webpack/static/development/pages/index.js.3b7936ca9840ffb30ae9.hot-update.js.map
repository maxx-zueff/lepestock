{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.3b7936ca9840ffb30ae9.hot-update.js","sources":["webpack:///./components/productList.js"],"sourcesContent":["import Link from \"next/link\";\r\nimport theme from \"../styles/theme\";\r\nimport BoxIcon from \"../components/boxIcon\";\r\n\r\nexport default function ProductList(props) {\r\n  const rows = [];\r\n  let row = [];\r\n  const columns = Math.max(2, Math.min(4, props.columns));\r\n  props.items.forEach((item) => {\r\n    if (row.length === columns) {\r\n      rows.push(row);\r\n      row = [];\r\n    }\r\n    row.push(item);\r\n  });\r\n  if (row.length > 0) {\r\n    rows.push(row);\r\n  }\r\n\r\n  const fullWidth = `${100 / (columns + 1)}%`;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontFamily: theme.fonts.sectionTitle,\r\n          fontWeight: theme.fonts.productTitleWeight,\r\n        }}\r\n      >\r\n        {props.title}\r\n      </h2>\r\n      {rows.map((row, indexRow) => {\r\n        return (\r\n          <div className=\"rootWrapper\" key={indexRow}>\r\n            <div className=\"sectionsWrapper\">\r\n              {row.map((item, index) => {\r\n                return (\r\n                  <Link href={item.href} key={index}>\r\n                    <a className=\"item\">\r\n                      <div className=\"contentWrapper\">\r\n                        <div className=\"content\">\r\n                          <img src={item.img} alt={item.imgAlt} />\r\n                          <h3 className=\"link\">{item.title}</h3>\r\n                          {item.salePrice && (\r\n                            <div className=\"link sale\">\r\n                              {item.salePrice} SALE\r\n                            </div>\r\n                          )}\r\n                          <div\r\n                            className={\r\n                              item.salePrice ? \"link crossedOut\" : \"link price\"\r\n                            }\r\n                          >\r\n                            {item.price}\r\n                          </div>\r\n                          {item.shippedInBox && (\r\n                            <React.Fragment>\r\n                              <div className=\"link shippedInBox\">\r\n                                <BoxIcon />\r\n                                Shipped in a Box\r\n                              </div>\r\n                            </React.Fragment>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </a>\r\n                  </Link>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      <style jsx>{`\r\n        .rootWrapper {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-around;\r\n          margin: 0 -7px;\r\n        }\r\n\r\n        .sectionsWrapper {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          flex-wrap: wrap;\r\n          text-align: center;\r\n        }\r\n\r\n        .item {\r\n          text-decoration: none;\r\n\r\n          color: ${theme.colors.productTitle};\r\n        }\r\n\r\n        @media screen and (max-width: 768px) {\r\n          .item {\r\n            width: 100%;\r\n          }\r\n        }\r\n\r\n        @media screen and (min-width: 768px) and (max-width: 1240px) {\r\n          .item {\r\n            width: 50%;\r\n          }\r\n        }\r\n\r\n        @media screen and (min-width: 1240px) {\r\n          .item {\r\n            width: ${fullWidth};\r\n            margin: 0 20px;\r\n          }\r\n        }\r\n\r\n        .contentWrapper {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n\r\n        .content {\r\n          flex-grow: 1;\r\n        }\r\n\r\n        .link {\r\n          margin: 10px;\r\n          text-align: left;\r\n          font-family: ${theme.fonts.link};\r\n          font-weight: ${theme.fonts.productNameWeight};\r\n          font-size: ${theme.fonts.productNameSize};\r\n          font: ${theme.fonts.productListFont};\r\n        }\r\n\r\n        .sale {\r\n          color: ${theme.colors.red};\r\n        }\r\n\r\n        .price {\r\n          color: ${theme.colors.grey};\r\n        }\r\n\r\n        .crossedOut {\r\n          color: ${theme.colors.grey};\r\n          font: ${theme.fonts.productListFont–°rossedOut};\r\n          text-decoration: line-through;\r\n        }\r\n\r\n        .shippedInBox {\r\n          color: ${theme.colors.shippedInBox};\r\n          font: ${theme.fonts.productShippedInBox};\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAIA;AAnDA;AAAA;AAAA;AAAA;AAsIA;;;;A","sourceRoot":""}