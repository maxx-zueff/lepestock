{"ast":null,"code":"var _jsxFileName = \"C:\\\\Repo\\\\lepestok\\\\components\\\\sections.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nexport default function SeasonsFlowers(props) {\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    style: {\n      textAlign: \"center\",\n      fontFamily: \"Montserrat Medium,Montserrat,Verdana,sans-serif\",\n      fontWeight: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, props.title), __jsx(\"div\", {\n    className: \"jsx-382783597\" + \" \" + \"rootWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-382783597\" + \" \" + \"sectionsWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, props.items.map(item => {\n    return __jsx(Link, {\n      href: item.href,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-382783597\" + \" \" + \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      src: item.img,\n      alt: item.imgAlt,\n      className: \"jsx-382783597\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 19\n      }\n    }), __jsx(\"h2\", {\n      className: \"jsx-382783597\" + \" \" + \"link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }\n    }, item.title)));\n  })), __jsx(_JSXStyle, {\n    id: \"382783597\",\n    __self: this\n  }, \".rootWrapper.jsx-382783597{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;margin:0 -5px;}.sectionsWrapper.jsx-382783597{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;text-align:center;font-family:Montserrat Bold,Montserrat,Verdana,sans-serif;font-weight:400;}.item.jsx-382783597{-webkit-text-decoration:none;text-decoration:none;color:#8e7329;}@media screen and (max-width:768px){.item.jsx-382783597{width:50%;}}@media screen and (min-width:768px) and (max-width:1240px){.item.jsx-382783597{width:33.33%;}}@media screen and (min-width:1240px){.item.jsx-382783597{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;margin:0 5px;}}.item.jsx-382783597:hover{-webkit-text-decoration:underline;text-decoration:underline;color:#755e1e;}.link.jsx-382783597{text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxSZXBvXFxsZXBlc3Rva1xcY29tcG9uZW50c1xcc2VjdGlvbnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkJvQixBQUcwQixBQU9BLEFBVVEsQUFNVCxBQU1HLEFBTUQsQUFNWSxBQU1SLFVBdkJsQixHQU1BLEtBa0JGLGdDQTlCZ0IsVUF5QkEsSUF4QmhCLE9BaUJpQixHQW5DSSxBQU9BLEFBb0NyQixVQVBFLG1GQW5DdUIsQUFPQSxtR0FOVCxBQU9DLGNBTmpCLDJDQU9vQixrQkFDMkMsMERBQzdDLGdCQUNsQiIsImZpbGUiOiJDOlxcUmVwb1xcbGVwZXN0b2tcXGNvbXBvbmVudHNcXHNlY3Rpb25zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2Vhc29uc0Zsb3dlcnMocHJvcHMpIHtcclxuICByZXR1cm4gKFxyXG4gICAgPFJlYWN0LkZyYWdtZW50PlxyXG4gICAgICA8aDFcclxuICAgICAgICBzdHlsZT17e1xyXG4gICAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiLFxyXG4gICAgICAgICAgZm9udEZhbWlseTogXCJNb250c2VycmF0IE1lZGl1bSxNb250c2VycmF0LFZlcmRhbmEsc2Fucy1zZXJpZlwiLFxyXG4gICAgICAgICAgZm9udFdlaWdodDogNTAwLFxyXG4gICAgICAgIH19XHJcbiAgICAgID5cclxuICAgICAgICB7cHJvcHMudGl0bGV9XHJcbiAgICAgIDwvaDE+XHJcblxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvb3RXcmFwcGVyXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzZWN0aW9uc1dyYXBwZXJcIj5cclxuICAgICAgICAgIHtwcm9wcy5pdGVtcy5tYXAoKGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgICA8TGluayBocmVmPXtpdGVtLmhyZWZ9PlxyXG4gICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwiaXRlbVwiPlxyXG4gICAgICAgICAgICAgICAgICA8aW1nIHNyYz17aXRlbS5pbWd9IGFsdD17aXRlbS5pbWdBbHR9IC8+XHJcbiAgICAgICAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJsaW5rXCI+e2l0ZW0udGl0bGV9PC9oMj5cclxuICAgICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICB9KX1cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgLnJvb3RXcmFwcGVyIHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMCAtNXB4O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC5zZWN0aW9uc1dyYXBwZXIge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBNb250c2VycmF0IEJvbGQsIE1vbnRzZXJyYXQsIFZlcmRhbmEsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLml0ZW0ge1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjOGU3MzI5O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgIC5pdGVtIHtcclxuICAgICAgICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMjQwcHgpIHtcclxuICAgICAgICAgICAgLml0ZW0ge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAzMy4zMyU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjQwcHgpIHtcclxuICAgICAgICAgICAgLml0ZW0ge1xyXG4gICAgICAgICAgICAgIGZsZXgtZ3JvdzogMTtcclxuICAgICAgICAgICAgICBtYXJnaW46IDAgNXB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLml0ZW06aG92ZXIge1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuXHJcbiAgICAgICAgICAgIGNvbG9yOiAjNzU1ZTFlO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC5saW5rIHtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L1JlYWN0LkZyYWdtZW50PlxyXG4gICk7XHJcbn1cclxuIl19 */\\n/*@ sourceURL=C:\\\\\\\\Repo\\\\\\\\lepestok\\\\\\\\components\\\\\\\\sections.js */\")));\n}","map":{"version":3,"sources":["C:/Repo/lepestok/components/sections.js"],"names":["Link","SeasonsFlowers","props","textAlign","fontFamily","fontWeight","title","items","map","item","href","img","imgAlt"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,QADN;AAELC,MAAAA,UAAU,EAAE,iDAFP;AAGLC,MAAAA,UAAU,EAAE;AAHP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGH,KAAK,CAACI,KAPT,CADF,EAWE;AAAA,uCAAe,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,uCAAe,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,IAAU;AACzB,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAI,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA,yCAAa,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAED,IAAI,CAACE,GAAf;AAAoB,MAAA,GAAG,EAAEF,IAAI,CAACG,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA,yCAAc,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBH,IAAI,CAACH,KAA3B,CAFF,CADF,CADF;AAQD,GATA,CADH,CADF;AAAA;AAAA;AAAA,yxJAXF,CADF;AAiFD","sourcesContent":["import Link from \"next/link\";\r\n\r\nexport default function SeasonsFlowers(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <h1\r\n        style={{\r\n          textAlign: \"center\",\r\n          fontFamily: \"Montserrat Medium,Montserrat,Verdana,sans-serif\",\r\n          fontWeight: 500,\r\n        }}\r\n      >\r\n        {props.title}\r\n      </h1>\r\n\r\n      <div className=\"rootWrapper\">\r\n        <div className=\"sectionsWrapper\">\r\n          {props.items.map((item) => {\r\n            return (\r\n              <Link href={item.href}>\r\n                <a className=\"item\">\r\n                  <img src={item.img} alt={item.imgAlt} />\r\n                  <h2 className=\"link\">{item.title}</h2>\r\n                </a>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <style jsx>{`\r\n          .rootWrapper {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            margin: 0 -5px;\r\n          }\r\n\r\n          .sectionsWrapper {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            flex-wrap: wrap;\r\n            text-align: center;\r\n            font-family: Montserrat Bold, Montserrat, Verdana, sans-serif;\r\n            font-weight: 400;\r\n          }\r\n\r\n          .item {\r\n            text-decoration: none;\r\n            color: #8e7329;\r\n          }\r\n\r\n          @media screen and (max-width: 768px) {\r\n            .item {\r\n              width: 50%;\r\n            }\r\n          }\r\n\r\n          @media screen and (min-width: 768px) and (max-width: 1240px) {\r\n            .item {\r\n              width: 33.33%;\r\n            }\r\n          }\r\n\r\n          @media screen and (min-width: 1240px) {\r\n            .item {\r\n              flex-grow: 1;\r\n              margin: 0 5px;\r\n            }\r\n          }\r\n\r\n          .item:hover {\r\n            text-decoration: underline;\r\n\r\n            color: #755e1e;\r\n          }\r\n\r\n          .link {\r\n            text-align: center;\r\n          }\r\n        `}</style>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}